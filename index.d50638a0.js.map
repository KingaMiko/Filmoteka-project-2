{"mappings":"AAAO,MAAMA,EAAU,mCCEhBC,eAAeC,IACpB,MAAMC,EAAoB,4DAA4DH,IAEhFI,QAAiBC,MAAMF,GAC7B,IAAKC,EAASE,GACZ,MAAM,IAAIC,MAAM,qCAGlB,aADmBH,EAASI,QAChBC,OACd,ECTOR,iBACL,IACE,MAAMS,QAAeR,IACfS,QAAuBN,MAC3B,yDAAyDL,KAGrDY,SADkBD,EAAeH,QACdI,OAEnBC,EAAUC,SAASC,cAAc,YAEvCL,EAAOM,SAAQC,IACb,MAAMC,EAAOJ,SAASK,cAAc,OACpCD,EAAKE,UAAUC,IAAI,QACnBR,EAAQS,YAAYJ,GAEpB,MAAMK,EAAOT,SAASK,cAAc,KACpCI,EAAKC,KAAO,oCAAoCP,EAAMQ,KAEtD,MAAMC,EAAQZ,SAASK,cAAc,OACrCO,EAAMN,UAAUC,IAAI,aACpBK,EAAMC,IAAM,kCAAkCV,EAAMW,cAEpD,MAAMC,EAAOf,SAASK,cAAc,OACpCU,EAAKT,UAAUC,IAAI,cAEnB,MAAMS,EAAQhB,SAASK,cAAc,MACrCW,EAAMC,YAAcd,EAAMa,MAE1B,MAAME,EAAWlB,SAASK,cAAc,MAClCc,EAAOhB,EAAMiB,aAAaC,UAAU,EAAG,GAMvCC,EALcnB,EAAMoB,UAAUC,KAAIC,IACtC,MAAMC,EAAQ5B,EAAO6B,MAAKD,GAASA,EAAMf,KAAOc,IAChD,OAAOC,EAAQA,EAAME,KAAO,EAAE,IAGIC,MAAM,EADxB,GAElBX,EAASD,YAAc,GAAGK,EAAgBQ,KAAK,WAAWX,IAE1DJ,EAAKP,YAAYQ,GACjBD,EAAKP,YAAYU,GAEjBT,EAAKD,YAAYI,GACjBH,EAAKD,YAAYO,GAEjBX,EAAKI,YAAYC,GACjBV,EAAQS,YAAYJ,EAAA,GAIxB,CAFE,MAAO2B,GACPC,QAAQD,MAAM,iBAAkBA,EAClC,CACF,CAEAE,GCvDA,IAAIC,EAAWlC,SAASC,cAAc,gBACtC+B,QAAQG,IAAID,GACZA,EAASE,iBAAiB,SAc1B,WACEpC,SAASqC,KAAKC,UAAY,EAC1BtC,SAASuC,gBAAgBD,UAAY,CACvC,IAfAE,OAAOC,SAAW,WAKZzC,SAASqC,KAAKC,UAAY,IAAMtC,SAASuC,gBAAgBD,UAAY,GACvEJ,EAASQ,MAAMC,QAAU,QAEzBT,EAASQ,MAAMC,QAAU,MAN7B","sources":["src/scripts/api-service.js","src/scripts/fetch.js","src/scripts/gallery.js","src/scripts/components/backToTop.js"],"sourcesContent":["export const API_KEY = 'c9769c2da639ff9e854a387ed1b7b891';\n","import { API_KEY } from './api-service';\n\nexport async function fetchTrendingMovies() {\n  const trendingMoviesUrl = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n\n  const response = await fetch(trendingMoviesUrl);\n  if (!response.ok) {\n    throw new Error('Błąd pobierania danych z API TMDB');\n  }\n  const data = await response.json();\n  return data.results;\n}\n","import { fetchTrendingMovies } from './fetch';\nimport { API_KEY } from './api-service';\nexport async function createGallery() {\n  try {\n    const movies = await fetchTrendingMovies();\n    const genresResponse = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`,\n    );\n    const genreData = await genresResponse.json();\n    const genres = genreData.genres;\n\n    const gallery = document.querySelector('.gallery');\n\n    movies.forEach(movie => {\n      const card = document.createElement('div');\n      card.classList.add('card');\n      gallery.appendChild(card);\n\n      const link = document.createElement('a');\n      link.href = `https://www.themoviedb.org/movie/${movie.id}`;\n\n      const image = document.createElement('img');\n      image.classList.add('card__pic');\n      image.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n      const info = document.createElement('div');\n      info.classList.add('card__info');\n\n      const title = document.createElement('h2');\n      title.textContent = movie.title;\n\n      const subtitle = document.createElement('h3');\n      const year = movie.release_date.substring(0, 4);\n      const movieGenres = movie.genre_ids.map(genreId => {\n        const genre = genres.find(genre => genre.id === genreId);\n        return genre ? genre.name : '';\n      });\n      const maxGenres = 2;\n      const displayedGenres = movieGenres.slice(0, maxGenres);\n      subtitle.textContent = `${displayedGenres.join(', ')} | ${year}`;\n\n      info.appendChild(title);\n      info.appendChild(subtitle);\n\n      link.appendChild(image);\n      link.appendChild(info);\n\n      card.appendChild(link);\n      gallery.appendChild(card);\n    });\n  } catch (error) {\n    console.error('Wystąpił błąd:', error);\n  }\n}\n\ncreateGallery();\n","let mybutton = document.querySelector('.back-to-top');\nconsole.log(mybutton);\nmybutton.addEventListener('click', topFunction);\n\nwindow.onscroll = function () {\n  scrollFunction();\n};\n\nfunction scrollFunction() {\n  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {\n    mybutton.style.display = 'block';\n  } else {\n    mybutton.style.display = 'none';\n  }\n}\n\nfunction topFunction() {\n  document.body.scrollTop = 0;\n  document.documentElement.scrollTop = 0;\n}\n"],"names":["$483328a1293df488$export$a9861bd62f48e142","async","$8e1b5d26c5357998$export$a2840eca364d9ff2","trendingMoviesUrl","response","fetch","ok","Error","json","results","movies","genresResponse","genres","gallery","document","querySelector","forEach","movie","card","createElement","classList","add","appendChild","link","href","id","image","src","poster_path","info","title","textContent","subtitle","year","release_date","substring","displayedGenres","genre_ids","map","genreId","genre","find","name","slice","join","error","console","$c60fdbf31f67737b$export$dac8b9bf675ebb55","$ac8ee7f1825e45ef$var$mybutton","log","addEventListener","body","scrollTop","documentElement","window","onscroll","style","display"],"version":3,"file":"index.d50638a0.js.map"}