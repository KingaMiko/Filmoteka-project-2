{"mappings":"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","sources":["src/scripts/categories-list.js","src/scripts/language.js"],"sourcesContent":["\nimport { API_KEY } from './api-service';\nimport Pagination from 'tui-pagination';\nimport Notiflix from 'notiflix';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { fetchYoutube, openLightbox } from './trailer';\nimport { fetchGenres, fetchMovies } from './fetch';\nimport { openModal } from './movie-modal';\n\nconst ITEMS_PER_PAGE = 10; // liczba filmów wyświetlanych na stronie\nconst paginationContainer = document.querySelector('#pagination-container');\nlet currentPage = 1;\n\n// Funkcja do pobierania filmów na podstawie wybranej kategorii\nasync function fetchMoviesByGenre(genreId, page) {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&with_genres=${genreId}&page=${page}`\n  );\n  const data = await response.json();\n  return data.results;\n}\n\n// Funkcja do tworzenia galerii filmów\nasync function createGallery() {\n  try {\n    const movies = await fetchMoviesByGenre(currentGenreId, currentPage);\n\n    const gallery = document.querySelector('.gallery');\n    gallery.innerHTML = ''; // Wyczyść galerię przed dodaniem nowych filmów\n\n    movies.forEach(movie => {\n      const card = document.createElement('div');\n      card.classList.add('card');\n      gallery.appendChild(card);\n\n      const link = document.createElement('a');\n\n      const image = document.createElement('img');\n      image.classList.add('card__pic');\n      image.src = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n      image.addEventListener('click', function () {\n        openModal(movie);\n      });\n\n      const info = document.createElement('div');\n      info.classList.add('card__info');\n\n      const title = document.createElement('h2');\n      title.textContent = movie.title;\n\n      const subtitle = document.createElement('h3');\n      const year = movie.release_date.substring(0, 4);\n      const genre = movie.genres ? movie.genres.slice(0, 3).join(', ') : 'N/A';\n      subtitle.textContent = `${genre} | ${year}`;\n\n      const trailerButton = createTrailerButton(movie.id);\n      link.appendChild(trailerButton);\n\n      link.appendChild(image);\n      link.appendChild(info);\n\n      info.appendChild(title);\n      info.appendChild(subtitle);\n\n      card.appendChild(link);\n      gallery.appendChild(card);\n    });\n\n    // Inicjalizacja paginacji\n    const totalItems = await fetchTotalMoviesCount();\n    const totalPages = Math.ceil(totalItems / ITEMS_PER_PAGE);\n\n    const pagination = new Pagination(paginationContainer, {\n      totalItems,\n      itemsPerPage: ITEMS_PER_PAGE,\n      visiblePages: 5,\n      page: currentPage,\n      centerAlign: true,\n    });\n\n    pagination.on('afterMove', async e => {\n      currentPage = e.page;\n      await createGallery();\n    });\n  } catch (error) {\n    Notiflix.Notify.failure(`An error occurred: ${error.message}`);\n  }\n}\n\nexport function createTrailerButton(movieId) {\n  const button = document.createElement('button');\n  button.classList.add('card', 'trailer-button');\n  button.textContent = 'Trailer';\n\n  button.addEventListener('click', async () => {\n    try {\n      const youtubeData = await fetchYoutube(movieId);\n      if (youtubeData.results.length > 0) {\n        const trailerKey = youtubeData.results[0].key;\n        const youtubeUrl = `https://www.youtube-nocookie.com/embed/${trailerKey}`;\n        openLightbox(youtubeUrl);\n      } else {\n        Report.warning('Video not found', `There is no trailer to display.`, 'Ok');\n      }\n    } catch (error) {\n      Notiflix.Notify.failure(`An error occurred: ${error.message}`);\n    }\n  });\n  return button;\n}\n\n// Funkcja do pobierania całkowitej liczby filmów\nasync function fetchTotalMoviesCount() {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/discover/movie?api_key=${API_KEY}&sort_by=popularity.desc`\n  );\n  const data = await response.json();\n  return data.total_results;\n}\n\n// Funkcja obsługująca zmianę kategorii\nasync function handleGenreChange() {\n  const genreSelect = document.getElementById('genre');\n  const selectedGenreId = genreSelect.value;\n  currentGenreId = selectedGenreId;\n  currentPage = 1;\n  await createGallery();\n}\n\n// Wywołanie funkcji handleGenreChange() przy załadowaniu strony\ndocument.addEventListener('DOMContentLoaded', () => {\n  const genreSelect = document.getElementById('genre');\n  genreSelect.addEventListener('change', handleGenreChange);\n});\n\n// Inicjalizacja galerii filmów\nlet currentGenreId = '';\ncreateGallery();\n","window.addEventListener('DOMContentLoaded', function () {\n  const allLang = ['en', 'pl'];\n  const html = document.querySelector('html');\n  const input = document.querySelector('.header__search-form-input');\n  const headerItem = document.querySelectorAll('.header__controls-item');\n  const buttonLibrary = document.querySelectorAll('.header-library-buttons__button');\n  const list = document.querySelectorAll('option');\n  const firstValueList = [...list];\n  const newList = [...list];\n\n  const langArr = {\n    headerTitle: {\n      en: 'Filmoteka',\n      pl: 'Filmoteka',\n    },\n    headerLink: {\n      en: 'HOME',\n      pl: 'START',\n    },\n    headerLibrary: {\n      en: 'MY LIBRARY',\n      pl: 'BIBLIOTEKA',\n    },\n    headerLibraryBtn: {\n      en: 'watched',\n      pl: 'obejrzane',\n    },\n    headerLibraryBtnque: {\n      en: 'queue',\n      pl: 'kolejka',\n    },\n    placaholder: {\n      en: 'Movie search',\n      pl: 'Wyszukaj film',\n    },\n    footeritem: {\n      en: '©  2023 | All Rights Reserved | ',\n      pl: '©  2023 | Wszelkie prawa zastrzezone | ',\n    },\n\n    filmvote: {\n      en: 'Vote / Votes',\n      pl: 'Głosów',\n    },\n    filmpop: {\n      en: 'Popularity',\n      pl: 'Popularność',\n    },\n    filmtitle: {\n      en: 'Original Title',\n      pl: 'Oryginalny tytuł',\n    },\n    filmg: {\n      en: 'Genre',\n      pl: 'Gatunek filmu',\n    },\n    filmabout: {\n      en: 'About',\n      pl: 'Opis',\n    },\n    butff: {\n      en: 'Add to watched',\n      pl: 'Dodano do obejrzanych',\n    },\n    butfc: {\n      en: 'Add to queue',\n      pl: 'Dodano do kolejki',\n    },\n    footer: {\n      en: 'Developed with',\n      pl: 'Zaprojektowano przez',\n    },\n    choose: {\n      en: 'Choose genre',\n      pl: 'Wybierz gatunek',\n    },\n  };\n  const genrelist = {\n    Action: {\n      en: 'Action',\n      pl: 'Akcja',\n    },\n    Adventure: {\n      en: 'Adventure',\n      pl: 'Przygoda',\n    },\n    Animation: {\n      en: 'Animation',\n      pl: 'Animacja',\n    },\n    Comedy: {\n      en: 'Comedy',\n      pl: 'Komedia',\n    },\n    Crime: {\n      en: 'Crime',\n      pl: 'Kryminał',\n    },\n    Documentary: {\n      en: 'Documentary',\n      pl: 'Dokument',\n    },\n    Drama: {\n      en: 'Drama',\n      pl: 'Dramat',\n    },\n    Family: {\n      en: 'Family',\n      pl: 'Familijny',\n    },\n    Fantasy: {\n      en: 'Fantasy',\n      pl: 'Fantastyka',\n    },\n    History: {\n      en: 'History',\n      pl: 'Historyczny',\n    },\n    Horror: {\n      en: 'Horror',\n      pl: 'Horror',\n    },\n    Music: {\n      en: 'Music',\n      pl: 'Muzyka',\n    },\n    Mystery: {\n      en: 'Mystery',\n      pl: 'Tajemnica',\n    },\n    Romance: {\n      en: 'Romance',\n      pl: 'Romans',\n    },\n    'Science Fiction': {\n      en: 'Science Fiction',\n      pl: 'Fantastyka naukowa',\n    },\n    'TV Movie': {\n      en: 'TV Movie',\n      pl: 'Film TV',\n    },\n    Thriller: {\n      en: 'Thriller',\n      pl: 'Thriller',\n    },\n    War: {\n      en: 'War',\n      pl: 'Wojenny',\n    },\n    Western: {\n      en: 'Western',\n      pl: 'Western',\n    },\n  };\n\n  const langButtons = document.querySelectorAll('.translate');\n  langButtons.forEach(button => {\n    button.addEventListener('click', changeLanguageOnClick);\n  });\n  if (langButtons.length > 0) {\n    langButtons.forEach(button => {\n      button.addEventListener('click', changeLanguageOnClick);\n    });\n  }\n\n  function changeLanguageOnClick(event) {\n    const selectedLanguage = event.target.getAttribute('data-lang');\n    let lang = event.target.getAttribute('data-lang');\n    location.href = window.location.pathname + '#' + lang;\n    let currentLanguage = localStorage.getItem('language');\n\n    if (selectedLanguage !== currentLanguage) {\n      localStorage.setItem('language', selectedLanguage);\n      location.reload();\n    }\n  }\n\n  function changeLanguage() {\n    let hash = localStorage.getItem('language');\n\n    //select.value = hash;\n    html.setAttribute('lang', hash);\n    document.querySelector('.header__controls-item').textContent = langArr['headerLink'][hash];\n    document.querySelector('.logo__title').textContent = langArr['headerTitle'][hash];\n    headerItem[1].textContent = langArr['headerLibrary'][hash];\n    document.querySelector('.footer__text').textContent = langArr['footeritem'][hash];\n    firstValueList[0].textContent = langArr['choose'][hash];\n    input.removeAttribute('placeholder');\n    document.querySelector('.dev').textContent = langArr['footer'][hash];\n\n    for (let key in genrelist) {\n      for (const element of newList) {\n        if (element.outerText === key) {\n          element.textContent = genrelist[key][hash];\n        }\n      }\n    }\n    if (hash === 'pl') {\n      input.setAttribute('placeholder', 'Szukaj film');\n    } else {\n      input.setAttribute('placeholder', 'Movie search');\n    }\n  }\n\n  // Inicjalizacja języka na podstawie wartości z localStorage lub domyślnie na 'en'\n  let valueLn = localStorage.getItem('language');\n  if (!allLang.includes(valueLn)) {\n    valueLn = 'en';\n  }\n  localStorage.setItem('language', valueLn);\n  changeLanguage();\n});\n"],"names":["$6cjIz","parcelRequire","$ddea7c689caedb20$var$paginationContainer","document","querySelector","$ddea7c689caedb20$var$currentPage","async","$ddea7c689caedb20$var$createGallery","movies","genreId","page","response","fetch","API_KEY","json","results","$ddea7c689caedb20$var$fetchMoviesByGenre","$ddea7c689caedb20$var$currentGenreId","gallery","innerHTML","forEach","movie","card","createElement","classList","add","appendChild","link","image","src","poster_path","addEventListener","$iIogm","openModal","info","title","textContent","subtitle","year","release_date","substring","genre","genres","slice","join","trailerButton","movieId","button","youtubeData","$hi4Ef","fetchYoutube","length","youtubeUrl","key","openLightbox","$b5uFQ","Report","warning","error","$parcel$interopDefault","$7IoHk","Notify","failure","message","$ddea7c689caedb20$export$3a344a372dd63a7f","id","totalItems","total_results","$ddea7c689caedb20$var$fetchTotalMoviesCount","Math","ceil","$afPuq","itemsPerPage","visiblePages","centerAlign","on","e","$ddea7c689caedb20$var$handleGenreChange","selectedGenreId","getElementById","value","window","html","input","headerItem","querySelectorAll","list","firstValueList","newList","langArr","headerTitle","en","pl","headerLink","headerLibrary","headerLibraryBtn","headerLibraryBtnque","placaholder","footeritem","filmvote","filmpop","filmtitle","filmg","filmabout","butff","butfc","footer","choose","genrelist","Action","Adventure","Animation","Comedy","Crime","Documentary","Drama","Family","Fantasy","History","Horror","Music","Mystery","Romance","Thriller","War","Western","langButtons","changeLanguageOnClick","event","selectedLanguage","target","getAttribute","lang","location","href","pathname","localStorage","getItem","setItem","reload","valueLn","includes","hash","setAttribute","removeAttribute","element","outerText","changeLanguage"],"version":3,"file":"index.3052a9df.js.map"}